{
    "q:select_hash":
      "rdf:type":[ "aeq:SelectQuery", "aeq:Query" ],
      "rdfs:label":"Expanded Select of URI.",
      "rdfs:description":"The select_hash takes a URI and an optional type, and selects all expanded URIs in the graph.  This selects all objects in use exclusively for the particular URI.",
      "parameter":[
          {
              "aeq:bind":"q:uri",
              "aeq:required":true
          },
              "aeq:bind":"q:type",
              "aeq:required":false
          },
          {
              "aeq:bind":"q:limit",
              "aeq:required":true,
              "aeq:bind_default":5
          }
      ],
      "aeq:query":"
      "aeq:query":"$select ?s where {
      "aeq:query":" ?uri a ?type.
      "aeq:query":" ?s a ?t.
      "aeq:query":" filter(regex(str(?s),concat("^",str(?uri),"(#|$)")))
      "aeq:query":"} order by ?s limit $limit"
},
"q:select_of_type":{
    "rdf:type":["aeq:SelectQuery","aeq:Query"],
    "rdfs:label":"Select of Type" ;
    "rdfs:description":"The select_of_type is just meant to give a few examples of objects that are of a specific type (default ucrdp:person) in the database.  Only the subject of the statement is returned.",
    "aeq:parameter":[
        {
        "aeq:bind":"q:type",
        "aeq:required": true ,
        "aeq:bind_default": "ucdrp:person"
    },
        {
        "aeq:bind": "q:limit" ,
        "aeq:required": true ,
        "aeq:bind_default": 5
    }
    ],
    "aeq:query":"
    "aeq:query":"select ?s WHERE {
    "aeq:query":"  ?s a ?type.
    "aeq:query":"} limit ?limit"
},
"q:describe_hash":{
    "rdf:type":["aeq:DescribeQuery","aeq:Query"],
    "rdfs:label":"Describe Hash",
    "rdfs:description":"This query will result in an expanded describe command.  By expanded, we take advantage of the way that we build URIs in Aggie Experts.  When a particular URI needs a complex object that only itself needs, then it creates this by extending it's own URI w/ a hashed suffix.  Utilizing this, we can know all the sub objects created or associated with any first class object in the system.",
    "aeq:parameter":[
        {
        "aeq:bind":"q:uri",
        "aeq:required":true
    },
        {
        "aeq:bind":"q:limit",
        "aeq:required":true,
        "aeq:bind_default":5
    }

    ],
    "aeq:query":""
}
